apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../config/quality.gradle'

//Build Property, From Which Commit was this build generated
def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()


android {

  compileSdkVersion 22
  buildToolsVersion '22.0.1'

  defaultConfig {
    applicationId "com.rajeshbatth.android_testing"
    minSdkVersion 16
    targetSdkVersion 22
    versionCode 1
    versionName "0.1"

    buildConfigField "String", "GIT_SHA", "\"${gitSha}\""

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    }
    debug {
      applicationIdSuffix '.debug'
      buildConfigField "String", "GIT_SHA", "\"${gitSha}\""
    }
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
    fatal 'UnusedResources'
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}



final DAGGER_VERSION = '2.0'
final SUPPORT_LIB_VERSION = '22.2.0'
final DEXMAKER_VERSION = '1.2'

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')

  //Support library
  compile "com.android.support:appcompat-v7:${SUPPORT_LIB_VERSION}"
  compile "com.android.support:design:${SUPPORT_LIB_VERSION}"
  compile "com.android.support:cardview-v7:${SUPPORT_LIB_VERSION}"

  //3rd party libraries
  compile 'com.jakewharton:butterknife:5.1.1'
  compile 'com.google.code.gson:gson:2.3'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'com.github.bumptech.glide:glide:3.6.0'
  compile 'com.squareup.okhttp:okhttp:2.4.0'
  compile 'com.jakewharton.timber:timber:3.1.0'

  //Debug Tools
  debugCompile 'com.facebook.stetho:stetho:1.1.1'
  debugCompile 'com.facebook.stetho:stetho-okhttp:1.1.1'
  debugCompile 'com.facebook.stetho:stetho-timber:1.1.1'
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

  //Dagger
  compile "com.google.dagger:dagger:${DAGGER_VERSION}"
  apt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"
  provided 'org.glassfish:javax.annotation:10.0-b28'
  androidTestApt "com.google.dagger:dagger-compiler:${DAGGER_VERSION}"

  //Android Test Dependencies
  androidTestCompile 'com.android.support.test:runner:0.3'
  androidTestCompile 'com.android.support.test:rules:0.3'
  androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2'
  androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
  androidTestCompile "com.android.support:support-annotations:${SUPPORT_LIB_VERSION}"
  androidTestCompile 'org.mockito:mockito-core:1.10.19'
  androidTestCompile "com.google.dexmaker:dexmaker:${DEXMAKER_VERSION}"
  androidTestCompile "com.google.dexmaker:dexmaker-mockito:${DEXMAKER_VERSION}"

  //JUnit Tests
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.10.19'
}

// The default 'assemble' task only applies to normal variants. Add test variants as well.
android.testVariants.all { variant -> tasks.getByName('assemble').dependsOn variant.assemble
}

